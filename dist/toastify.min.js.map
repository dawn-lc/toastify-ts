{
  "version": 3,
  "sources": ["../src/toastify.ts"],
  "sourcesContent": ["export type Gravity = \"top\" | \"bottom\";\r\nexport type Position = \"left\" | \"center\" | \"right\";\r\n\r\nexport interface ToastOptions {\r\n    root?: Element;\r\n    text?: string;\r\n    node?: Node;\r\n    duration?: number;\r\n    close?: boolean;\r\n    gravity?: Gravity;\r\n    position?: Position;\r\n    className?: string | string[];\r\n    stopOnFocus?: boolean;\r\n    onClose?: () => void;\r\n    onClick?: (e: Event) => void;\r\n    style?: Partial<CSSStyleDeclaration>;\r\n    oldestFirst?: boolean;\r\n}\r\n\r\nclass ToastManager {\r\n    private static timeoutMap = new Map<Toast, number>();\r\n    private static containers = new Map<string, HTMLElement>();\r\n\r\n    static getContainer(gravity: Gravity, position: Position): HTMLElement {\r\n        const containerId = `toast-container-${gravity}-${position}`;\r\n        if (this.containers.has(containerId)) {\r\n            return this.containers.get(containerId)!;\r\n        }\r\n        return this.createContainer(containerId, gravity, position);\r\n    }\r\n\r\n    private static createContainer(id: string, gravity: Gravity, position: Position): HTMLElement {\r\n        const container = document.createElement(\"div\");\r\n        container.classList.add('toast-container', id, `toast-${gravity}`, `toast-${position}`);\r\n        container.setAttribute('role', 'region');\r\n        document.body.appendChild(container);\r\n        this.containers.set(id, container);\r\n        return container;\r\n    }\r\n\r\n    static addTimeout(toast: Toast, duration: number, callback: () => void) {\r\n        this.delTimeout(toast);\r\n        const timeoutId = window.setTimeout(() => {\r\n            callback();\r\n            this.delTimeout(toast);\r\n        }, duration);\r\n        this.timeoutMap.set(toast, timeoutId);\r\n    }\r\n\r\n    static delTimeout(toast: Toast) {\r\n        if (this.timeoutMap.has(toast)) {\r\n            clearTimeout(this.timeoutMap.get(toast)!);\r\n            this.timeoutMap.delete(toast);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Toast\r\n * @example\r\n * new Toast({ text: \"Hello World\" }).show();\r\n */\r\nexport class Toast {\r\n    private static readonly defaults: ToastOptions = {\r\n        gravity: \"top\",\r\n        position: 'right',\r\n        stopOnFocus: true,\r\n        oldestFirst: true,\r\n    };\r\n\r\n    public options: ToastOptions;\r\n\r\n    public duration: number;\r\n    public element: HTMLElement;\r\n    public root: Element;\r\n    public gravity: Gravity;\r\n    public position: Position;\r\n    public close: boolean;\r\n    public oldestFirst: boolean;\r\n    public stopOnFocus: boolean;\r\n    public onClick?: (e: Event) => void;\r\n    public onClose?: () => void;\r\n    \r\n    private contentElement?: HTMLDivElement;\r\n    private closeButton?: HTMLSpanElement;\r\n    private mouseOverHandler?: () => void;\r\n    private mouseLeaveHandler?: () => void;\r\n    private clickHandler?: (e: Event) => void;\r\n    private closeButtonHandler?: () => void;\r\n    private animationEndHandler?: (e: AnimationEvent) => void;\r\n\r\n    /**\r\n     * Create a Toastify instance\r\n     * @param options User configuration options\r\n     */\r\n    constructor(options: ToastOptions) {\r\n        this.options = {\r\n            ...Toast.defaults,\r\n            ...options\r\n        };\r\n\r\n        this.element = document.createElement(\"div\");\r\n        this.gravity = this.options.gravity!;\r\n        this.position = this.options.position!;\r\n        this.root = this.options.root ?? ToastManager.getContainer(this.gravity, this.position);\r\n        this.oldestFirst = this.options.oldestFirst!;\r\n        this.stopOnFocus = this.options.stopOnFocus!;\r\n        this.duration = this.options.duration ?? -1;\r\n        this.close = this.options.close ?? false;\r\n        this.onClick = this.options.onClick;\r\n        this.onClose = this.options.onClose;\r\n        this.applyBaseStyles()\r\n            .createContent()\r\n            .addCloseButton()\r\n            .measureDimensions()\r\n            .ensureCloseMethod()\r\n            .bindEvents();\r\n    }\r\n\r\n    private applyBaseStyles(): this {\r\n        this.element.classList.add('toast', `toast-${this.gravity}`, `toast-${this.position}`);\r\n\r\n        if (this.options.className) {\r\n            const classes = Array.isArray(this.options.className)\r\n                ? this.options.className\r\n                : [this.options.className];\r\n            classes.forEach(cls => this.element.classList.add(cls));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private createContent(): this {\r\n        this.contentElement = document.createElement(\"div\");\r\n        this.contentElement.classList.add('toast-content');\r\n\r\n        if (this.options.text) {\r\n            this.contentElement.textContent = this.options.text;\r\n        }\r\n        if (this.options.node) {\r\n            this.contentElement.appendChild(this.options.node);\r\n        }\r\n        if (this.options.style) {\r\n            this.applyStyles(this.contentElement, this.options.style);\r\n        }\r\n\r\n        this.element.appendChild(this.contentElement);\r\n        return this;\r\n    }\r\n\r\n    private addCloseButton(): this {\r\n        if (!this.close) return this;\r\n\r\n        this.closeButton = document.createElement(\"span\");\r\n        this.closeButton.ariaLabel = \"Close\";\r\n        this.closeButton.className = \"toast-close\";\r\n        this.closeButton.textContent = \"🗙\";\r\n        this.closeButtonHandler = () => this.hide();\r\n        this.closeButton.addEventListener(\"click\", this.closeButtonHandler);\r\n\r\n        this.element.appendChild(this.closeButton);\r\n        return this;\r\n    }\r\n\r\n    private measureDimensions(): this {\r\n        const originalStyles = {\r\n            display: this.element.style.display,\r\n            visibility: this.element.style.visibility,\r\n            position: this.element.style.position\r\n        };\r\n\r\n        this.applyStyles(this.element, {\r\n            display: 'block',\r\n            visibility: 'hidden',\r\n            position: 'absolute'\r\n        });\r\n\r\n        document.body.appendChild(this.element);\r\n        const { height, width } = this.element.getBoundingClientRect();\r\n        this.element.style.setProperty('--toast-height', `${height}px`);\r\n        this.element.style.setProperty('--toast-width', `${width}px`);\r\n        document.body.removeChild(this.element);\r\n\r\n        this.applyStyles(this.element, originalStyles);\r\n        return this;\r\n    }\r\n\r\n    private ensureCloseMethod(): this {\r\n        if (this.duration <= 0 && !this.close && !this.onClick) {\r\n            this.onClick = () => this.hide();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private bindEvents(): this {\r\n        if (this.stopOnFocus && this.duration > 0) {\r\n            this.mouseOverHandler = () => ToastManager.delTimeout(this);\r\n            this.mouseLeaveHandler = () => ToastManager.addTimeout(this, this.duration, () => this.hide());\r\n            this.element.addEventListener(\"mouseover\", this.mouseOverHandler);\r\n            this.element.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\r\n        }\r\n        \r\n        if (this.onClick) {\r\n            this.clickHandler = (e: Event) => {\r\n                this.onClick?.call(this, e);\r\n            };\r\n            this.element.addEventListener(\"click\", this.clickHandler);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private applyStyles(element: HTMLElement, styles: Partial<CSSStyleDeclaration>) {\r\n        for (const key in styles) {\r\n            if (styles[key] === undefined) continue;\r\n            element.style[key] = styles[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Display the Toast notification\r\n     * @returns this Instance for method chaining\r\n     */\r\n    public show(): this {\r\n        const elementToInsert = this.oldestFirst ? this.root.firstChild : this.root.lastChild;\r\n        this.root.insertBefore(this.element!, elementToInsert);\r\n        if (!this.element.classList.replace('hide', 'show')) {\r\n            this.element.classList.add('show')\r\n        }\r\n        if (this.duration && this.duration > 0) {\r\n            ToastManager.addTimeout(this, this.duration!, () => this.hide());\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @deprecated This function is deprecated. Use the show() instead.\r\n     */\r\n    public showToast() {\r\n        return this.show();\r\n    }\r\n\r\n    /**\r\n     * Immediately hide the current Toast\r\n     * Triggers a CSS exit animation and removes the element after the animation completes\r\n     */\r\n    public hide(): void {\r\n        if (!this.element) return;\r\n        ToastManager.delTimeout(this);\r\n        \r\n        // 移除所有事件监听器\r\n        if (this.mouseOverHandler) {\r\n            this.element.removeEventListener('mouseover', this.mouseOverHandler);\r\n        }\r\n        if (this.mouseLeaveHandler) {\r\n            this.element.removeEventListener('mouseleave', this.mouseLeaveHandler);\r\n        }\r\n        if (this.clickHandler) {\r\n            this.element.removeEventListener('click', this.clickHandler);\r\n        }\r\n        if (this.closeButton && this.closeButtonHandler) {\r\n            this.closeButton.removeEventListener('click', this.closeButtonHandler);\r\n        }\r\n\r\n        this.animationEndHandler = (e: AnimationEvent) => {\r\n            if (e.animationName.startsWith('toast-out')) {\r\n                this.element?.removeEventListener('animationend', this.animationEndHandler!);\r\n                this.element?.remove();\r\n            }\r\n        };\r\n\r\n        this.element.addEventListener('animationend', this.animationEndHandler);\r\n        if (!this.element.classList.replace('show', 'hide')) {\r\n            this.element.classList.add('hide');\r\n        }\r\n        this.onClose?.();\r\n    }\r\n\r\n    /**\r\n     * @deprecated This function is deprecated. Use the hide() instead.\r\n     */\r\n    public hideToast(): void {\r\n        this.hide();\r\n    }\r\n}\r\n\r\nexport default function createToast(options: ToastOptions): Toast {\r\n    return new Toast(options);\r\n}\r\n\r\ndeclare global {\r\n    function Toast(options: ToastOptions): Toast;\r\n    /**\r\n     * @deprecated This function is deprecated. Use the Toast() instead.\r\n     */\r\n    function Toastify(options: ToastOptions): Toast;\r\n}\r\n\r\nglobalThis.Toast = createToast;\r\nglobalThis.Toastify = createToast;\r\n"],
  "mappings": "mBAmBA,MAAMA,CAAa,CACf,OAAe,WAAa,IAAI,IAChC,OAAe,WAAa,IAAI,IAEhC,OAAO,aAAaC,EAAkBC,EAAiC,CACnE,MAAMC,EAAc,mBAAmBF,CAAO,IAAIC,CAAQ,GAC1D,OAAI,KAAK,WAAW,IAAIC,CAAW,EACxB,KAAK,WAAW,IAAIA,CAAW,EAEnC,KAAK,gBAAgBA,EAAaF,EAASC,CAAQ,CAC9D,CAEA,OAAe,gBAAgBE,EAAYH,EAAkBC,EAAiC,CAC1F,MAAMG,EAAY,SAAS,cAAc,KAAK,EAC9C,OAAAA,EAAU,UAAU,IAAI,kBAAmBD,EAAI,SAASH,CAAO,GAAI,SAASC,CAAQ,EAAE,EACtFG,EAAU,aAAa,OAAQ,QAAQ,EACvC,SAAS,KAAK,YAAYA,CAAS,EACnC,KAAK,WAAW,IAAID,EAAIC,CAAS,EAC1BA,CACX,CAEA,OAAO,WAAWC,EAAcC,EAAkBC,EAAsB,CACpE,KAAK,WAAWF,CAAK,EACrB,MAAMG,EAAY,OAAO,WAAW,IAAM,CACtCD,EAAS,EACT,KAAK,WAAWF,CAAK,CACzB,EAAGC,CAAQ,EACX,KAAK,WAAW,IAAID,EAAOG,CAAS,CACxC,CAEA,OAAO,WAAWH,EAAc,CACxB,KAAK,WAAW,IAAIA,CAAK,IACzB,aAAa,KAAK,WAAW,IAAIA,CAAK,CAAE,EACxC,KAAK,WAAW,OAAOA,CAAK,EAEpC,CACJ,CAOO,MAAMI,CAAM,CACf,OAAwB,SAAyB,CAC7C,QAAS,MACT,SAAU,QACV,YAAa,GACb,YAAa,EACjB,EAEO,QAEA,SACA,QACA,KACA,QACA,SACA,MACA,YACA,YACA,QACA,QAEC,eACA,YACA,iBACA,kBACA,aACA,mBACA,oBAMR,YAAYC,EAAuB,CAC/B,KAAK,QAAU,CACX,GAAGD,EAAM,SACT,GAAGC,CACP,EAEA,KAAK,QAAU,SAAS,cAAc,KAAK,EAC3C,KAAK,QAAU,KAAK,QAAQ,QAC5B,KAAK,SAAW,KAAK,QAAQ,SAC7B,KAAK,KAAO,KAAK,QAAQ,MAAQX,EAAa,aAAa,KAAK,QAAS,KAAK,QAAQ,EACtF,KAAK,YAAc,KAAK,QAAQ,YAChC,KAAK,YAAc,KAAK,QAAQ,YAChC,KAAK,SAAW,KAAK,QAAQ,UAAY,GACzC,KAAK,MAAQ,KAAK,QAAQ,OAAS,GACnC,KAAK,QAAU,KAAK,QAAQ,QAC5B,KAAK,QAAU,KAAK,QAAQ,QAC5B,KAAK,gBAAgB,EAChB,cAAc,EACd,eAAe,EACf,kBAAkB,EAClB,kBAAkB,EAClB,WAAW,CACpB,CAEQ,iBAAwB,CAC5B,YAAK,QAAQ,UAAU,IAAI,QAAS,SAAS,KAAK,OAAO,GAAI,SAAS,KAAK,QAAQ,EAAE,EAEjF,KAAK,QAAQ,YACG,MAAM,QAAQ,KAAK,QAAQ,SAAS,EAC9C,KAAK,QAAQ,UACb,CAAC,KAAK,QAAQ,SAAS,GACrB,QAAQY,GAAO,KAAK,QAAQ,UAAU,IAAIA,CAAG,CAAC,EAEnD,IACX,CAEQ,eAAsB,CAC1B,YAAK,eAAiB,SAAS,cAAc,KAAK,EAClD,KAAK,eAAe,UAAU,IAAI,eAAe,EAE7C,KAAK,QAAQ,OACb,KAAK,eAAe,YAAc,KAAK,QAAQ,MAE/C,KAAK,QAAQ,MACb,KAAK,eAAe,YAAY,KAAK,QAAQ,IAAI,EAEjD,KAAK,QAAQ,OACb,KAAK,YAAY,KAAK,eAAgB,KAAK,QAAQ,KAAK,EAG5D,KAAK,QAAQ,YAAY,KAAK,cAAc,EACrC,IACX,CAEQ,gBAAuB,CAC3B,OAAK,KAAK,OAEV,KAAK,YAAc,SAAS,cAAc,MAAM,EAChD,KAAK,YAAY,UAAY,QAC7B,KAAK,YAAY,UAAY,cAC7B,KAAK,YAAY,YAAc,KAC/B,KAAK,mBAAqB,IAAM,KAAK,KAAK,EAC1C,KAAK,YAAY,iBAAiB,QAAS,KAAK,kBAAkB,EAElE,KAAK,QAAQ,YAAY,KAAK,WAAW,EAClC,MAViB,IAW5B,CAEQ,mBAA0B,CAC9B,MAAMC,EAAiB,CACnB,QAAS,KAAK,QAAQ,MAAM,QAC5B,WAAY,KAAK,QAAQ,MAAM,WAC/B,SAAU,KAAK,QAAQ,MAAM,QACjC,EAEA,KAAK,YAAY,KAAK,QAAS,CAC3B,QAAS,QACT,WAAY,SACZ,SAAU,UACd,CAAC,EAED,SAAS,KAAK,YAAY,KAAK,OAAO,EACtC,KAAM,CAAE,OAAAC,EAAQ,MAAAC,CAAM,EAAI,KAAK,QAAQ,sBAAsB,EAC7D,YAAK,QAAQ,MAAM,YAAY,iBAAkB,GAAGD,CAAM,IAAI,EAC9D,KAAK,QAAQ,MAAM,YAAY,gBAAiB,GAAGC,CAAK,IAAI,EAC5D,SAAS,KAAK,YAAY,KAAK,OAAO,EAEtC,KAAK,YAAY,KAAK,QAASF,CAAc,EACtC,IACX,CAEQ,mBAA0B,CAC9B,OAAI,KAAK,UAAY,GAAK,CAAC,KAAK,OAAS,CAAC,KAAK,UAC3C,KAAK,QAAU,IAAM,KAAK,KAAK,GAE5B,IACX,CAEQ,YAAmB,CACvB,OAAI,KAAK,aAAe,KAAK,SAAW,IACpC,KAAK,iBAAmB,IAAMb,EAAa,WAAW,IAAI,EAC1D,KAAK,kBAAoB,IAAMA,EAAa,WAAW,KAAM,KAAK,SAAU,IAAM,KAAK,KAAK,CAAC,EAC7F,KAAK,QAAQ,iBAAiB,YAAa,KAAK,gBAAgB,EAChE,KAAK,QAAQ,iBAAiB,aAAc,KAAK,iBAAiB,GAGlE,KAAK,UACL,KAAK,aAAgBgB,GAAa,CAC9B,KAAK,SAAS,KAAK,KAAMA,CAAC,CAC9B,EACA,KAAK,QAAQ,iBAAiB,QAAS,KAAK,YAAY,GAErD,IACX,CAEQ,YAAYC,EAAsBC,EAAsC,CAC5E,UAAWC,KAAOD,EACVA,EAAOC,CAAG,IAAM,SACpBF,EAAQ,MAAME,CAAG,EAAID,EAAOC,CAAG,EAEvC,CAMO,MAAa,CAChB,MAAMC,EAAkB,KAAK,YAAc,KAAK,KAAK,WAAa,KAAK,KAAK,UAC5E,YAAK,KAAK,aAAa,KAAK,QAAUA,CAAe,EAChD,KAAK,QAAQ,UAAU,QAAQ,OAAQ,MAAM,GAC9C,KAAK,QAAQ,UAAU,IAAI,MAAM,EAEjC,KAAK,UAAY,KAAK,SAAW,GACjCpB,EAAa,WAAW,KAAM,KAAK,SAAW,IAAM,KAAK,KAAK,CAAC,EAE5D,IACX,CAKO,WAAY,CACf,OAAO,KAAK,KAAK,CACrB,CAMO,MAAa,CACX,KAAK,UACVA,EAAa,WAAW,IAAI,EAGxB,KAAK,kBACL,KAAK,QAAQ,oBAAoB,YAAa,KAAK,gBAAgB,EAEnE,KAAK,mBACL,KAAK,QAAQ,oBAAoB,aAAc,KAAK,iBAAiB,EAErE,KAAK,cACL,KAAK,QAAQ,oBAAoB,QAAS,KAAK,YAAY,EAE3D,KAAK,aAAe,KAAK,oBACzB,KAAK,YAAY,oBAAoB,QAAS,KAAK,kBAAkB,EAGzE,KAAK,oBAAuBgB,GAAsB,CAC1CA,EAAE,cAAc,WAAW,WAAW,IACtC,KAAK,SAAS,oBAAoB,eAAgB,KAAK,mBAAoB,EAC3E,KAAK,SAAS,OAAO,EAE7B,EAEA,KAAK,QAAQ,iBAAiB,eAAgB,KAAK,mBAAmB,EACjE,KAAK,QAAQ,UAAU,QAAQ,OAAQ,MAAM,GAC9C,KAAK,QAAQ,UAAU,IAAI,MAAM,EAErC,KAAK,UAAU,EACnB,CAKO,WAAkB,CACrB,KAAK,KAAK,CACd,CACJ,CAEe,SAARK,EAA6BV,EAA8B,CAC9D,OAAO,IAAID,EAAMC,CAAO,CAC5B,CAUA,WAAW,MAAQU,EACnB,WAAW,SAAWA",
  "names": ["ToastManager", "gravity", "position", "containerId", "id", "container", "toast", "duration", "callback", "timeoutId", "Toast", "options", "cls", "originalStyles", "height", "width", "e", "element", "styles", "key", "elementToInsert", "createToast"]
}
